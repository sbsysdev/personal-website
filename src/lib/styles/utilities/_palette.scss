@use 'sass:list';

@function palette($intensity-key, $serie-key) {
    @return var(--#{$prefix}-palette-#{$serie-key}-#{$intensity-key});
}

// background color
@mixin bg-color($intensity-key, $serie-key: neutral) {
    background-color: rgb(palette($intensity-key, $serie-key) / var(--#{$prefix}-opacity-bg));
}
@mixin bg-opacity($opacity-key) {
    --#{$prefix}-opacity-bg: #{opacity($opacity-key)};
}

// font color
@mixin font-color($intensity-key, $serie-key: neutral) {
    color: rgb(palette($intensity-key, $serie-key) / var(--#{$prefix}-opacity-font));
}
@mixin font-opacity($opacity-key) {
    --#{$prefix}-opacity-font: #{opacity($opacity-key)};
}

// stroke color
@mixin stroke-color($intensity-key, $serie-key: neutral) {
    stroke: rgb(palette($intensity-key, $serie-key) / var(--#{$prefix}-opacity-stroke));
}
@mixin stroke-opacity($opacity-key) {
    --#{$prefix}-opacity-stroke: #{opacity($opacity-key)};
}

// fill color
@mixin fill-color($intensity-key, $serie-key: neutral) {
    fill: rgb(palette($intensity-key, $serie-key) / var(--#{$prefix}-opacity-fill));
}
@mixin fill-opacity($opacity-key) {
    --#{$prefix}-opacity-fill: #{opacity($opacity-key)};
}

// border color
@mixin border-color($positions...) {
    @each $position-key, $intensity-key, $serie-key in $positions {
        @if $serie-key == null {
            $serie-key: neutral;
        }

        @if $position-key == y or $position-key == top or $position-key == all {
            border-top-color: rgb(palette($intensity-key, $serie-key) / var(--#{$prefix}-opacity-border-top));
        }

        @if $position-key == y or $position-key == bottom or $position-key == all {
            border-bottom-color: rgb(palette($intensity-key, $serie-key) / var(--#{$prefix}-opacity-border-bottom));
        }

        @if $position-key == x or $position-key == left or $position-key == all {
            border-left-color: rgb(palette($intensity-key, $serie-key) / var(--#{$prefix}-opacity-border-left));
        }

        @if $position-key == x or $position-key == right or $position-key == all {
            border-right-color: rgb(palette($intensity-key, $serie-key) / var(--#{$prefix}-opacity-border-right));
        }
    }
}
@mixin border-opacity($positions...) {
    @each $position-key, $opacity-key in $positions {
        @if $position-key == y or $position-key == top or $position-key == all {
            --#{$prefix}-opacity-border-top: #{opacity($opacity-key)};
        }

        @if $position-key == y or $position-key == bottom or $position-key == all {
            --#{$prefix}-opacity-border-bottom: #{opacity($opacity-key)};
        }

        @if $position-key == x or $position-key == left or $position-key == all {
            --#{$prefix}-opacity-border-left: #{opacity($opacity-key)};
        }

        @if $position-key == x or $position-key == right or $position-key == all {
            --#{$prefix}-opacity-border-right: #{opacity($opacity-key)};
        }
    }
}
